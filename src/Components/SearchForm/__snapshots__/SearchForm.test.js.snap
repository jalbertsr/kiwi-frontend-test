// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Searchform renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchForm
    handleChange={[Function]}
    handleDates={[Function]}
    handleSubmit={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="searchForm"
      >
        <Row
          gutter={0}
        >
          <Col
            md={10}
            offset={2}
            xs={20}
          >
            <p
              className="searchTitle"
            >
              From:
            </p>
            <SearchBar
              onChange={[Function]}
              placeholder="Barcelona"
              use="from"
            />
            <p
              className="searchTitle"
            >
              To:
            </p>
            <SearchBar
              onChange={[Function]}
              placeholder="Brno"
              use="to"
            />
            <p
              className="searchTitle"
            >
              Dates:
            </p>
            <Calendar
              className="datePicker"
              getDates={[Function]}
            />
            <Button
              className="buttonSearch"
              ghost={false}
              htmlType="submit"
              loading={false}
              prefixCls="ant-btn"
              type="primary"
            >
              Search
            </Button>
          </Col>
          <Col
            md={4}
            offset={4}
          >
            <img
              className="logo"
              src="https://s.productreview.com.au/products/images/b1fd66fc-1ded-492d-89ab-815912295ef3.png"
              width="100%"
            />
          </Col>
        </Row>
      </div>,
      "hideRequiredMark": false,
      "layout": "horizontal",
      "onSubmit": [Function],
      "prefixCls": "ant-form",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Row
          gutter={0}
        >
          <Col
            md={10}
            offset={2}
            xs={20}
          >
            <p
              className="searchTitle"
            >
              From:
            </p>
            <SearchBar
              onChange={[Function]}
              placeholder="Barcelona"
              use="from"
            />
            <p
              className="searchTitle"
            >
              To:
            </p>
            <SearchBar
              onChange={[Function]}
              placeholder="Brno"
              use="to"
            />
            <p
              className="searchTitle"
            >
              Dates:
            </p>
            <Calendar
              className="datePicker"
              getDates={[Function]}
            />
            <Button
              className="buttonSearch"
              ghost={false}
              htmlType="submit"
              loading={false}
              prefixCls="ant-btn"
              type="primary"
            >
              Search
            </Button>
          </Col>
          <Col
            md={4}
            offset={4}
          >
            <img
              className="logo"
              src="https://s.productreview.com.au/products/images/b1fd66fc-1ded-492d-89ab-815912295ef3.png"
              width="100%"
            />
          </Col>
        </Row>,
        "className": "searchForm",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Col
              md={10}
              offset={2}
              xs={20}
            >
              <p
                className="searchTitle"
              >
                From:
              </p>
              <SearchBar
                onChange={[Function]}
                placeholder="Barcelona"
                use="from"
              />
              <p
                className="searchTitle"
              >
                To:
              </p>
              <SearchBar
                onChange={[Function]}
                placeholder="Brno"
                use="to"
              />
              <p
                className="searchTitle"
              >
                Dates:
              </p>
              <Calendar
                className="datePicker"
                getDates={[Function]}
              />
              <Button
                className="buttonSearch"
                ghost={false}
                htmlType="submit"
                loading={false}
                prefixCls="ant-btn"
                type="primary"
              >
                Search
              </Button>
            </Col>,
            <Col
              md={4}
              offset={4}
            >
              <img
                className="logo"
                src="https://s.productreview.com.au/products/images/b1fd66fc-1ded-492d-89ab-815912295ef3.png"
                width="100%"
              />
            </Col>,
          ],
          "gutter": 0,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <p
                  className="searchTitle"
                >
                  From:
                </p>,
                <SearchBar
                  onChange={[Function]}
                  placeholder="Barcelona"
                  use="from"
                />,
                <p
                  className="searchTitle"
                >
                  To:
                </p>,
                <SearchBar
                  onChange={[Function]}
                  placeholder="Brno"
                  use="to"
                />,
                <p
                  className="searchTitle"
                >
                  Dates:
                </p>,
                <Calendar
                  className="datePicker"
                  getDates={[Function]}
                />,
                <Button
                  className="buttonSearch"
                  ghost={false}
                  htmlType="submit"
                  loading={false}
                  prefixCls="ant-btn"
                  type="primary"
                >
                  Search
                </Button>,
              ],
              "md": 10,
              "offset": 2,
              "xs": 20,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "From:",
                  "className": "searchTitle",
                },
                "ref": null,
                "rendered": "From:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Barcelona",
                  "use": "from",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "To:",
                  "className": "searchTitle",
                },
                "ref": null,
                "rendered": "To:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Brno",
                  "use": "to",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Dates:",
                  "className": "searchTitle",
                },
                "ref": null,
                "rendered": "Dates:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "datePicker",
                  "getDates": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Search",
                  "className": "buttonSearch",
                  "ghost": false,
                  "htmlType": "submit",
                  "loading": false,
                  "prefixCls": "ant-btn",
                  "type": "primary",
                },
                "ref": null,
                "rendered": "Search",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <img
                className="logo"
                src="https://s.productreview.com.au/products/images/b1fd66fc-1ded-492d-89ab-815912295ef3.png"
                width="100%"
              />,
              "md": 4,
              "offset": 4,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "logo",
                "src": "https://s.productreview.com.au/products/images/b1fd66fc-1ded-492d-89ab-815912295ef3.png",
                "width": "100%",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="searchForm"
        >
          <Row
            gutter={0}
          >
            <Col
              md={10}
              offset={2}
              xs={20}
            >
              <p
                className="searchTitle"
              >
                From:
              </p>
              <SearchBar
                onChange={[Function]}
                placeholder="Barcelona"
                use="from"
              />
              <p
                className="searchTitle"
              >
                To:
              </p>
              <SearchBar
                onChange={[Function]}
                placeholder="Brno"
                use="to"
              />
              <p
                className="searchTitle"
              >
                Dates:
              </p>
              <Calendar
                className="datePicker"
                getDates={[Function]}
              />
              <Button
                className="buttonSearch"
                ghost={false}
                htmlType="submit"
                loading={false}
                prefixCls="ant-btn"
                type="primary"
              >
                Search
              </Button>
            </Col>
            <Col
              md={4}
              offset={4}
            >
              <img
                className="logo"
                src="https://s.productreview.com.au/products/images/b1fd66fc-1ded-492d-89ab-815912295ef3.png"
                width="100%"
              />
            </Col>
          </Row>
        </div>,
        "hideRequiredMark": false,
        "layout": "horizontal",
        "onSubmit": [Function],
        "prefixCls": "ant-form",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Row
            gutter={0}
          >
            <Col
              md={10}
              offset={2}
              xs={20}
            >
              <p
                className="searchTitle"
              >
                From:
              </p>
              <SearchBar
                onChange={[Function]}
                placeholder="Barcelona"
                use="from"
              />
              <p
                className="searchTitle"
              >
                To:
              </p>
              <SearchBar
                onChange={[Function]}
                placeholder="Brno"
                use="to"
              />
              <p
                className="searchTitle"
              >
                Dates:
              </p>
              <Calendar
                className="datePicker"
                getDates={[Function]}
              />
              <Button
                className="buttonSearch"
                ghost={false}
                htmlType="submit"
                loading={false}
                prefixCls="ant-btn"
                type="primary"
              >
                Search
              </Button>
            </Col>
            <Col
              md={4}
              offset={4}
            >
              <img
                className="logo"
                src="https://s.productreview.com.au/products/images/b1fd66fc-1ded-492d-89ab-815912295ef3.png"
                width="100%"
              />
            </Col>
          </Row>,
          "className": "searchForm",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Col
                md={10}
                offset={2}
                xs={20}
              >
                <p
                  className="searchTitle"
                >
                  From:
                </p>
                <SearchBar
                  onChange={[Function]}
                  placeholder="Barcelona"
                  use="from"
                />
                <p
                  className="searchTitle"
                >
                  To:
                </p>
                <SearchBar
                  onChange={[Function]}
                  placeholder="Brno"
                  use="to"
                />
                <p
                  className="searchTitle"
                >
                  Dates:
                </p>
                <Calendar
                  className="datePicker"
                  getDates={[Function]}
                />
                <Button
                  className="buttonSearch"
                  ghost={false}
                  htmlType="submit"
                  loading={false}
                  prefixCls="ant-btn"
                  type="primary"
                >
                  Search
                </Button>
              </Col>,
              <Col
                md={4}
                offset={4}
              >
                <img
                  className="logo"
                  src="https://s.productreview.com.au/products/images/b1fd66fc-1ded-492d-89ab-815912295ef3.png"
                  width="100%"
                />
              </Col>,
            ],
            "gutter": 0,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <p
                    className="searchTitle"
                  >
                    From:
                  </p>,
                  <SearchBar
                    onChange={[Function]}
                    placeholder="Barcelona"
                    use="from"
                  />,
                  <p
                    className="searchTitle"
                  >
                    To:
                  </p>,
                  <SearchBar
                    onChange={[Function]}
                    placeholder="Brno"
                    use="to"
                  />,
                  <p
                    className="searchTitle"
                  >
                    Dates:
                  </p>,
                  <Calendar
                    className="datePicker"
                    getDates={[Function]}
                  />,
                  <Button
                    className="buttonSearch"
                    ghost={false}
                    htmlType="submit"
                    loading={false}
                    prefixCls="ant-btn"
                    type="primary"
                  >
                    Search
                  </Button>,
                ],
                "md": 10,
                "offset": 2,
                "xs": 20,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "From:",
                    "className": "searchTitle",
                  },
                  "ref": null,
                  "rendered": "From:",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onChange": [Function],
                    "placeholder": "Barcelona",
                    "use": "from",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "To:",
                    "className": "searchTitle",
                  },
                  "ref": null,
                  "rendered": "To:",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onChange": [Function],
                    "placeholder": "Brno",
                    "use": "to",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Dates:",
                    "className": "searchTitle",
                  },
                  "ref": null,
                  "rendered": "Dates:",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "datePicker",
                    "getDates": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Search",
                    "className": "buttonSearch",
                    "ghost": false,
                    "htmlType": "submit",
                    "loading": false,
                    "prefixCls": "ant-btn",
                    "type": "primary",
                  },
                  "ref": null,
                  "rendered": "Search",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <img
                  className="logo"
                  src="https://s.productreview.com.au/products/images/b1fd66fc-1ded-492d-89ab-815912295ef3.png"
                  width="100%"
                />,
                "md": 4,
                "offset": 4,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "logo",
                  "src": "https://s.productreview.com.au/products/images/b1fd66fc-1ded-492d-89ab-815912295ef3.png",
                  "width": "100%",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
